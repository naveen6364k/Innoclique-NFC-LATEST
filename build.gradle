plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.innoclique'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://localhost:8080' // Update with your SonarQube server URL
        property "sonar.login", ""
        property "sonar.password", ""
        property "sonar.projectKey", "Demo:service"
        property 'sonar.projectName', 'Demo sonar'
        property 'sonar.java.source', 17
        property 'sonar.junit.reportPaths', 'build/results'
        property 'encoding', 'UTF-8'
        property 'charSet', 'UTF-8'
       // property 'sonar.gradle.skipCompile', 'true'
        property "sonar.coverage.jacoco.xmlReportPaths", "path.xml"
        // Add more properties as needed
    }
  }

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
     reports.html.required = true
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	//google()
    //mavenLocal()
	mavenCentral()
}

apply plugin: "org.sonarqube"


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-test'
   	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
  	implementation 'org.springframework.boot:spring-boot-starter-security'
  	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.keycloak:keycloak-authz-client:22.0.1'
	implementation 'org.keycloak:keycloak-admin-client-jakarta:21.0.1'
	implementation 'org.jboss.resteasy:resteasy-jackson2-provider:6.2.5.Final'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.3'
   // classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.4.1.3373'
}

tasks.withType(Test) {
    finalizedBy jacocoTestReport
}

tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {	
        events "passed"
    }
}
jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
